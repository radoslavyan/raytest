{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rados\\\\DevSource\\\\ReactAndDotNetProject\\\\ReactSource\\\\src\\\\Forms\\\\DateField.tsx\",\n  _s = $RefreshSig$();\nimport { useFormikContext } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DateField(props) {\n  _s();\n  var _values$props$field, _errors$props$field;\n  const {\n    values,\n    validateForm,\n    touched,\n    errors\n  } = useFormikContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ms-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.field,\n      children: props.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      id: props.field,\n      name: props.field,\n      value: values[props.field] ? values[props.field].toISOString().split('T')[0] : \"\",\n      defaultValue: (_values$props$field = values[props.field]) === null || _values$props$field === void 0 ? void 0 : _values$props$field.toLocaleDateString('en-CA'),\n      onChange: e => {\n        const date = new Date(e.currentTarget.value + \"T00:00:00\");\n        values[props.field] = date;\n        validateForm();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), touched[props.field] && errors[props.field] ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: (_errors$props$field = errors[props.field]) === null || _errors$props$field === void 0 ? void 0 : _errors$props$field.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(DateField, \"qY0THuA31tj6kZcHzz6bWpBYuJI=\", false, function () {\n  return [useFormikContext];\n});\n_c = DateField;\nvar _c;\n$RefreshReg$(_c, \"DateField\");","map":{"version":3,"names":["useFormikContext","jsxDEV","_jsxDEV","DateField","props","_s","_values$props$field","_errors$props$field","values","validateForm","touched","errors","className","children","htmlFor","field","displayName","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","toISOString","split","defaultValue","toLocaleDateString","onChange","e","date","Date","currentTarget","toString","_c","$RefreshReg$"],"sources":["C:/Users/rados/DevSource/ReactAndDotNetProject/ReactSource/src/Forms/DateField.tsx"],"sourcesContent":["import { useFormikContext } from \"formik\"\r\n\r\n\r\nexport default function DateField(props: DateFieldProps) {\r\n    const { values, validateForm, touched, errors } = useFormikContext<any>();\r\n\r\n    return (\r\n        <div className=\"ms-3\">\r\n            <label htmlFor={props.field}>{props.displayName}</label>\r\n\r\n            <input type=\"date\" className=\"form-control\"\r\n                id={props.field}\r\n                name={props.field}\r\n                value={values[props.field] ? values[props.field].toISOString().split('T')[0] : \"\"}\r\n                defaultValue={values[props.field]?.toLocaleDateString('en-CA')}\r\n                onChange={e => {\r\n                    const date = new Date(e.currentTarget.value + \"T00:00:00\");\r\n                    values[props.field] = date;\r\n                    validateForm();\r\n                }}\r\n            />\r\n            {touched[props.field] && errors[props.field] ?\r\n             <div className=\"text-danger\">{errors[props.field]?.toString()}</div> : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface DateFieldProps {\r\n    displayName: string;\r\n    field: string;\r\n}\r\n    \r\n"],"mappings":";;AAAA,SAASA,gBAAgB,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzC,eAAe,SAASC,SAASA,CAACC,KAAqB,EAAE;EAAAC,EAAA;EAAA,IAAAC,mBAAA,EAAAC,mBAAA;EACrD,MAAM;IAAEC,MAAM;IAAEC,YAAY;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGX,gBAAgB,CAAM,CAAC;EAEzE,oBACIE,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBX,OAAA;MAAOY,OAAO,EAAEV,KAAK,CAACW,KAAM;MAAAF,QAAA,EAAET,KAAK,CAACY;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExDlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACT,SAAS,EAAC,cAAc;MACvCU,EAAE,EAAElB,KAAK,CAACW,KAAM;MAChBQ,IAAI,EAAEnB,KAAK,CAACW,KAAM;MAClBS,KAAK,EAAEhB,MAAM,CAACJ,KAAK,CAACW,KAAK,CAAC,GAAGP,MAAM,CAACJ,KAAK,CAACW,KAAK,CAAC,CAACU,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAG;MAClFC,YAAY,GAAArB,mBAAA,GAAEE,MAAM,CAACJ,KAAK,CAACW,KAAK,CAAC,cAAAT,mBAAA,uBAAnBA,mBAAA,CAAqBsB,kBAAkB,CAAC,OAAO,CAAE;MAC/DC,QAAQ,EAAEC,CAAC,IAAI;QACX,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACG,aAAa,CAACT,KAAK,GAAG,WAAW,CAAC;QAC1DhB,MAAM,CAACJ,KAAK,CAACW,KAAK,CAAC,GAAGgB,IAAI;QAC1BtB,YAAY,CAAC,CAAC;MAClB;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACDV,OAAO,CAACN,KAAK,CAACW,KAAK,CAAC,IAAIJ,MAAM,CAACP,KAAK,CAACW,KAAK,CAAC,gBAC3Cb,OAAA;MAAKU,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAAN,mBAAA,GAAEI,MAAM,CAACP,KAAK,CAACW,KAAK,CAAC,cAAAR,mBAAA,uBAAnBA,mBAAA,CAAqB2B,QAAQ,CAAC;IAAC;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAAG,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG3E,CAAC;AAEd;AAACf,EAAA,CAxBuBF,SAAS;EAAA,QACqBH,gBAAgB;AAAA;AAAAmC,EAAA,GAD9ChC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}