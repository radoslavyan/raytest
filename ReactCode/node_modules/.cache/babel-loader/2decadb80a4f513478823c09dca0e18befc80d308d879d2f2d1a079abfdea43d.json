{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rados\\\\DevSource\\\\ReactAndDotNetProject\\\\ReactSource\\\\src\\\\utils\\\\GenericList.tsx\";\nimport Loading from \"./Loading\";\n\n//use generic list to centralize the displaying of the different states of the list of movies being fetched\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GenericList(props) {\n  if (!props.list) {\n    if (props.loadingUI) {\n      return props.loadingUI;\n    }\n    //if the movies are not loaded yet, display a loading\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  } else if (props.list.length === 0) {\n    if (props.emptyListUI) {\n      return props.emptyListUI;\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"There are no elements to display\"\n    }, void 0, false);\n  } else {\n    return props.children;\n  }\n}\n_c = GenericList;\nvar _c;\n$RefreshReg$(_c, \"GenericList\");","map":{"version":3,"names":["Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","GenericList","props","list","loadingUI","fileName","_jsxFileName","lineNumber","columnNumber","length","emptyListUI","children","_c","$RefreshReg$"],"sources":["C:/Users/rados/DevSource/ReactAndDotNetProject/ReactSource/src/utils/GenericList.tsx"],"sourcesContent":["import { ReactElement } from \"react\";\r\nimport Loading from \"./Loading\";\r\n\r\n//use generic list to centralize the displaying of the different states of the list of movies being fetched\r\nexport default function GenericList<T>(props: genericListProps) {\r\n\r\n    if (!props.list) {\r\n        if (props.loadingUI) {\r\n            return props.loadingUI;\r\n        }\r\n        //if the movies are not loaded yet, display a loading\r\n        return <Loading />\r\n\r\n    } else if (props.list.length === 0) {\r\n        if (props.emptyListUI) {\r\n            return props.emptyListUI;\r\n        }\r\n        return <>There are no elements to display</>\r\n    } else {\r\n        return props.children;\r\n    }\r\n\r\n}\r\n\r\n\r\ninterface genericListProps {\r\n    list: any;\r\n    loadingUI?: ReactElement;\r\n    emptyListUI?: ReactElement;\r\n    children: ReactElement;\r\n}"],"mappings":";AACA,OAAOA,OAAO,MAAM,WAAW;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,WAAWA,CAAIC,KAAuB,EAAE;EAE5D,IAAI,CAACA,KAAK,CAACC,IAAI,EAAE;IACb,IAAID,KAAK,CAACE,SAAS,EAAE;MACjB,OAAOF,KAAK,CAACE,SAAS;IAC1B;IACA;IACA,oBAAON,OAAA,CAACF,OAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAEtB,CAAC,MAAM,IAAIN,KAAK,CAACC,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;IAChC,IAAIP,KAAK,CAACQ,WAAW,EAAE;MACnB,OAAOR,KAAK,CAACQ,WAAW;IAC5B;IACA,oBAAOZ,OAAA,CAAAE,SAAA;MAAAW,QAAA,EAAE;IAAgC,gBAAE,CAAC;EAChD,CAAC,MAAM;IACH,OAAOT,KAAK,CAACS,QAAQ;EACzB;AAEJ;AAACC,EAAA,GAlBuBX,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}