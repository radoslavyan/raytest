{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rados\\\\DevSource\\\\ReactAndDotNetProject\\\\ReactSource\\\\src\\\\Movies\\\\MoviesList.tsx\";\nimport IndividualMovies from \"./IndividualMovies\";\nimport css from './MoviesList.module.css';\nimport Loading from \"../utils/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport default function MoviesList(props) {\n  //use conditional rendering to display a loading gif while the movies are being fetched\n  if (!props.movies) {\n    //if the movies are not loaded\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  } else if (props.movies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"There are no movies to display\"\n    }, void 0, false);\n  } else {\n    //the movies are loaded\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.div,\n      children: props.movies.map(movie => /*#__PURE__*/_createElement(IndividualMovies, {\n        ...movie,\n        key: movie.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["IndividualMovies","css","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","createElement","_createElement","MoviesList","props","movies","fileName","_jsxFileName","lineNumber","columnNumber","length","children","className","div","map","movie","key","id","__self","__source","_c","$RefreshReg$"],"sources":["C:/Users/rados/DevSource/ReactAndDotNetProject/ReactSource/src/Movies/MoviesList.tsx"],"sourcesContent":["import IndividualMovies from \"./IndividualMovies\";\r\nimport { movieDTO } from \"./Movies.model\";\r\nimport css from './MoviesList.module.css'\r\nimport Loading from \"../utils/Loading\";\r\n\r\nexport default function MoviesList(props : moviesListProps) {\r\n    \r\n    //use conditional rendering to display a loading gif while the movies are being fetched\r\n    if(!props.movies){\r\n       //if the movies are not loaded\r\n        return <Loading />\r\n    }\r\n    else if(props.movies.length === 0){\r\n        return <>There are no movies to display</>\r\n    }\r\n    else{\r\n        //the movies are loaded\r\n        return (\r\n            <div className={css.div}>\r\n                {props.movies.map(movie => \r\n                <IndividualMovies {...movie} key={movie.id} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\ninterface moviesListProps {\r\n    movies ?: movieDTO[];\r\n}"],"mappings":";AAAA,OAAOA,gBAAgB,MAAM,oBAAoB;AAEjD,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAEvC,eAAe,SAASC,UAAUA,CAACC,KAAuB,EAAE;EAExD;EACA,IAAG,CAACA,KAAK,CAACC,MAAM,EAAC;IACd;IACC,oBAAOP,OAAA,CAACF,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB,CAAC,MACI,IAAGL,KAAK,CAACC,MAAM,CAACK,MAAM,KAAK,CAAC,EAAC;IAC9B,oBAAOZ,OAAA,CAAAE,SAAA;MAAAW,QAAA,EAAE;IAA8B,gBAAE,CAAC;EAC9C,CAAC,MACG;IACA;IACA,oBACIb,OAAA;MAAKc,SAAS,EAAEjB,GAAG,CAACkB,GAAI;MAAAF,QAAA,EACnBP,KAAK,CAACC,MAAM,CAACS,GAAG,CAACC,KAAK,iBACvBb,cAAA,CAACR,gBAAgB;QAAA,GAAKqB,KAAK;QAAEC,GAAG,EAAED,KAAK,CAACE,EAAG;QAAAC,MAAA;QAAAC,QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEd;AACJ;AAACW,EAAA,GAnBuBjB,UAAU;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}