{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rados\\\\DevSource\\\\ReactAndDotNetProject\\\\ReactSource\\\\src\\\\Genres\\\\CreateGenre.tsx\";\nimport { Field, Form, Formik } from \"formik\";\nimport Button from \"../utils/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateGenres() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Genres Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      onSubmit: value => {\n        //when the form is posted\n        console.log(value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"name\",\n            id: \"name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save Chagens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-secondary\",\n          href: \"/genres\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = CreateGenres;\nvar _c;\n$RefreshReg$(_c, \"CreateGenres\");","map":{"version":3,"names":["Field","Form","Formik","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGenres","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","name","onSubmit","value","console","log","className","htmlFor","id","type","href","_c","$RefreshReg$"],"sources":["C:/Users/rados/DevSource/ReactAndDotNetProject/ReactSource/src/Genres/CreateGenre.tsx"],"sourcesContent":["import { Field, Form, Formik } from \"formik\";\r\nimport Button from \"../utils/Button\";\r\nimport * as yup from 'yup';\r\n\r\n\r\n\r\nexport default function CreateGenres() {\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Create Genres Test</h3>\r\n\r\n\r\n            <Formik initialValues={{\r\n                name: ''\r\n            }}\r\n                onSubmit={value => {\r\n                    //when the form is posted\r\n                    console.log(value);\r\n                }}\r\n            >\r\n                <Form>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <Field name=\"name\" id=\"name\" className=\"form-control\" />\r\n                    </div>\r\n\r\n                    <Button type=\"submit\">Save Chagens</Button>\r\n                    <a className=\"btn btn-secondary\" href=\"/genres\">Cancel</a>\r\n\r\n                </Form>\r\n\r\n            </Formik>\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAC5C,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKrC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAGnC,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG3BR,OAAA,CAACH,MAAM;MAACY,aAAa,EAAE;QACnBC,IAAI,EAAE;MACV,CAAE;MACEC,QAAQ,EAAEC,KAAK,IAAI;QACf;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAE;MAAAR,QAAA,eAEFJ,OAAA,CAACJ,IAAI;QAAAQ,QAAA,gBACDJ,OAAA;UAAKe,SAAS,EAAC,MAAM;UAAAX,QAAA,gBACjBJ,OAAA;YAAOgB,OAAO,EAAC,MAAM;YAAAZ,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClCR,OAAA,CAACL,KAAK;YAACe,IAAI,EAAC,MAAM;YAACO,EAAE,EAAC,MAAM;YAACF,SAAS,EAAC;UAAc;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eAENR,OAAA,CAACF,MAAM;UAACoB,IAAI,EAAC,QAAQ;UAAAd,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3CR,OAAA;UAAGe,SAAS,EAAC,mBAAmB;UAACI,IAAI,EAAC,SAAS;UAAAf,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA,eACX,CAAC;AAEX;AAACY,EAAA,GA9BuBjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}