{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rados\\\\DevSource\\\\ReactAndDotNetProject\\\\ReactSource\\\\src\\\\Genres\\\\EditGenre.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport GenreForm from \"./GenreForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditGenre() {\n  _s();\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), \"the id is \", id, /*#__PURE__*/_jsxDEV(GenreForm, {\n      model: {\n        name: 'Action'\n      },\n      onSubmit: async value => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        console.log(id);\n        console.log(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EditGenre, \"fqO2BJMIKIJIVrbHkq11ivWvqss=\", false, function () {\n  return [useParams];\n});\n_c = EditGenre;\nvar _c;\n$RefreshReg$(_c, \"EditGenre\");","map":{"version":3,"names":["useParams","GenreForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditGenre","_s","id","children","fileName","_jsxFileName","lineNumber","columnNumber","model","name","onSubmit","value","Promise","resolve","setTimeout","console","log","_c","$RefreshReg$"],"sources":["C:/Users/rados/DevSource/ReactAndDotNetProject/ReactSource/src/Genres/EditGenre.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport GenreForm from \"./GenreForm\";\r\n\r\nexport default function EditGenre() {\r\n    const { id }: any = useParams<{ id: string }>();\r\n\r\n    return (\r\n        <>\r\n            <h3>Edit Genre</h3>\r\n            the id is {id}\r\n\r\n            <GenreForm model={{ name: 'Action' }}\r\n\r\n                onSubmit={async value => {\r\n                    await new Promise(resolve => setTimeout(resolve, 500));\r\n                    console.log(id);\r\n                    console.log(value);\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAQ,CAAC,GAAGR,SAAS,CAAiB,CAAC;EAE/C,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACIN,OAAA;MAAAM,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,cACT,EAACL,EAAE,eAEbL,OAAA,CAACF,SAAS;MAACa,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAS,CAAE;MAEjCC,QAAQ,EAAE,MAAMC,KAAK,IAAI;QACrB,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;QACtDE,OAAO,CAACC,GAAG,CAACd,EAAE,CAAC;QACfa,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;MACtB;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACJ,CAAC;AAEX;AAACN,EAAA,CAlBuBD,SAAS;EAAA,QACTN,SAAS;AAAA;AAAAuB,EAAA,GADTjB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}