{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rados\\\\DevSource\\\\ReactAndDotNetProject\\\\ReactSource\\\\src\\\\Genres\\\\GenreForm.tsx\";\nimport { Form, Formik } from \"formik\";\nimport TextField from \"../Forms/TextField\";\nimport Button from \"../utils/Button\";\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GenreForm() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      onSubmit: async value => {\n        //when the form is posted\n        await new Promise(resolve => setTimeout(resolve, 3000));\n        console.log(value);\n      },\n      validationSchema: yup.object({\n        name: yup.string().required(\"This field is required\")\n      }),\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          field: \"name\",\n          displayName: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Save Chagens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-secondary\",\n          href: \"/genres\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = GenreForm;\nvar _c;\n$RefreshReg$(_c, \"GenreForm\");","map":{"version":3,"names":["Form","Formik","TextField","Button","yup","jsxDEV","_jsxDEV","Fragment","_Fragment","GenreForm","children","initialValues","name","onSubmit","value","Promise","resolve","setTimeout","console","log","validationSchema","object","string","required","formikProps","field","displayName","fileName","_jsxFileName","lineNumber","columnNumber","disabled","isSubmitting","type","className","href","_c","$RefreshReg$"],"sources":["C:/Users/rados/DevSource/ReactAndDotNetProject/ReactSource/src/Genres/GenreForm.tsx"],"sourcesContent":["import { Form, Formik } from \"formik\";\r\nimport TextField from \"../Forms/TextField\";\r\nimport Button from \"../utils/Button\";\r\nimport * as yup from 'yup';\r\n\r\nexport default function GenreForm() {\r\n    return <>\r\n        <Formik initialValues={{\r\n            name: ''\r\n        }}\r\n            onSubmit={async value => {\r\n                //when the form is posted\r\n                await new Promise(resolve => setTimeout(resolve, 3000));\r\n                console.log(value);\r\n            }}\r\n            validationSchema={yup.object({\r\n                name: yup.string().required(\"This field is required\")\r\n            })}\r\n        >\r\n            {(formikProps) => (\r\n                < Form >\r\n                    <TextField field=\"name\" displayName=\"Name\" />\r\n                    <Button disabled={formikProps.isSubmitting} type=\"submit\">Save Chagens</Button>\r\n                    <a className=\"btn btn-secondary\" href=\"/genres\">Cancel</a>\r\n                </Form>\r\n            )}\r\n\r\n\r\n        </Formik >\r\n\r\n    </>\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AACrC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,eAAe,SAASC,SAASA,CAAA,EAAG;EAChC,oBAAOH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACHJ,OAAA,CAACL,MAAM;MAACU,aAAa,EAAE;QACnBC,IAAI,EAAE;MACV,CAAE;MACEC,QAAQ,EAAE,MAAMC,KAAK,IAAI;QACrB;QACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QACvDE,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;MACtB,CAAE;MACFM,gBAAgB,EAAEhB,GAAG,CAACiB,MAAM,CAAC;QACzBT,IAAI,EAAER,GAAG,CAACkB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,wBAAwB;MACxD,CAAC,CAAE;MAAAb,QAAA,EAEDc,WAAW,iBACTlB,OAAA,CAAEN,IAAI;QAAAU,QAAA,gBACFJ,OAAA,CAACJ,SAAS;UAACuB,KAAK,EAAC,MAAM;UAACC,WAAW,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7CxB,OAAA,CAACH,MAAM;UAAC4B,QAAQ,EAAEP,WAAW,CAACQ,YAAa;UAACC,IAAI,EAAC,QAAQ;UAAAvB,QAAA,EAAC;QAAY;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/ExB,OAAA;UAAG4B,SAAS,EAAC,mBAAmB;UAACC,IAAI,EAAC,SAAS;UAAAzB,QAAA,EAAC;QAAM;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGI;EAAC,gBAEZ,CAAC;AACP;AAACM,EAAA,GA1BuB3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}