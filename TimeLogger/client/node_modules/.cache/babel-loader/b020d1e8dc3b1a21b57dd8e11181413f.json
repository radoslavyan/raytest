{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rados\\\\OneDrive\\\\Skrivebord\\\\rep\\\\TimeLogger\\\\client\\\\src\\\\components\\\\Project\\\\EditProject.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport ProjectForm from \"./ProjectForm\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditProject() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), \"the id is \", id, /*#__PURE__*/_jsxDEV(ProjectForm, {\n      model: {\n        name: 'Project #',\n        projectId: parseInt(id),\n        description: 'Project # descript',\n        deadline: '02.05.2024'\n      },\n      onSubmit: async value => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        console.log(id);\n        console.log(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditProject, \"fqO2BJMIKIJIVrbHkq11ivWvqss=\", false, function () {\n  return [useParams];\n});\n\n_c = EditProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProject\");","map":{"version":3,"names":["useParams","ProjectForm","React","EditProject","id","name","projectId","parseInt","description","deadline","value","Promise","resolve","setTimeout","console","log"],"sources":["C:/Users/rados/OneDrive/Skrivebord/rep/TimeLogger/client/src/components/Project/EditProject.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport React from \"react\";\r\n\r\nexport default function EditProject() {\r\n    const { id }: any = useParams<{ id: string }>();\r\n\r\n    return (\r\n        <>\r\n            <h3>Edit Genre</h3>\r\n            the id is {id}\r\n\r\n            <ProjectForm model={{ name: 'Project #', projectId: parseInt(id), description: 'Project # descript', deadline: '02.05.2024'}}\r\n\r\n                onSubmit={async value => {\r\n                    await new Promise(resolve => setTimeout(resolve, 500));\r\n                    console.log(id);\r\n                    console.log(value);\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,WAAT,GAAuB;EAAA;;EAClC,MAAM;IAAEC;EAAF,IAAcJ,SAAS,EAA7B;EAEA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,gBAEeI,EAFf,eAII,QAAC,WAAD;MAAa,KAAK,EAAE;QAAEC,IAAI,EAAE,WAAR;QAAqBC,SAAS,EAAEC,QAAQ,CAACH,EAAD,CAAxC;QAA8CI,WAAW,EAAE,oBAA3D;QAAiFC,QAAQ,EAAE;MAA3F,CAApB;MAEI,QAAQ,EAAE,MAAMC,KAAN,IAAe;QACrB,MAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAjC,CAAN;QACAE,OAAO,CAACC,GAAR,CAAYX,EAAZ;QACAU,OAAO,CAACC,GAAR,CAAYL,KAAZ;MACH;IANL;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADJ;AAeH;;GAlBuBP,W;UACAH,S;;;KADAG,W"},"metadata":{},"sourceType":"module"}