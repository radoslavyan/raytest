{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport const urlProjects = `${BASE_URL}/projects`;\nexport async function getAll() {\n  try {\n    const response = await axios.get(`${urlProjects}`);\n    console.log('Fetched projects:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching projects:', error);\n    throw error;\n  }\n}\nexport async function getById(id) {\n  try {\n    const response = await axios.get(`${urlProjects}/${id}`);\n    console.log(`Fetched project with ID ${id}:`, response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching project with ID ${id}:`, error);\n    throw error;\n  }\n}\nexport async function createProject(project) {\n  try {\n    const response = await axios.post(`${urlProjects}`, project);\n    console.log('Created project:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating project:', error);\n    throw error;\n  }\n}\nexport async function updateProject(project) {\n  try {\n    const response = await axios.put(`${urlProjects}/${project.projectId}`, project);\n    console.log('Updated project:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating project:', error);\n    throw error;\n  }\n}\nexport async function removeProject(id) {\n  try {\n    const response = await axios.delete(`${urlProjects}/${id}`);\n    console.log(`Deleted project with ID ${id}:`, response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting project with ID ${id}:`, error);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_BASE_URL","urlProjects","getAll","response","get","console","log","data","error","getById","id","createProject","project","post","updateProject","put","projectId","removeProject","delete"],"sources":["C:/Users/rados/OneDrive/Skrivebord/rep/TimeLogger/client/src/app/apiEndpoints/ProjectEndpoints.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { ProjectDto } from '../components/Project/projects.model';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nexport const urlProjects = `${BASE_URL}/projects`;\r\n\r\nexport async function getAll() {\r\n    try {\r\n        const response = await axios.get(`${urlProjects}`);\r\n        console.log('Fetched projects:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching projects:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getById(id: number) {\r\n    try {\r\n        const response = await axios.get(`${urlProjects}/${id}`);\r\n        console.log(`Fetched project with ID ${id}:`, response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(`Error fetching project with ID ${id}:`, error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function createProject(project: ProjectDto) {\r\n    try {\r\n        const response = await axios.post(`${urlProjects}`, project);\r\n        console.log('Created project:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating project:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function updateProject(project: ProjectDto) {\r\n    try {\r\n        const response = await axios.put(`${urlProjects}/${project.projectId}`, project);\r\n        console.log('Updated project:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating project:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function removeProject(id: number) {\r\n    try {\r\n        const response = await axios.delete(`${urlProjects}/${id}`);\r\n        console.log(`Deleted project with ID ${id}:`, response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(`Error deleting project with ID ${id}:`, error);\r\n        throw error;\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAA7B;AACA,OAAO,MAAMC,WAAW,GAAI,GAAEJ,QAAS,WAAhC;AAEP,OAAO,eAAeK,MAAf,GAAwB;EAC3B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEH,WAAY,EAAzB,CAAvB;IACAI,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,QAAQ,CAACI,IAA1C;IACA,OAAOJ,QAAQ,CAACI,IAAhB;EACH,CAJD,CAIE,OAAOC,KAAP,EAAc;IACZH,OAAO,CAACG,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;IACA,MAAMA,KAAN;EACH;AACJ;AAED,OAAO,eAAeC,OAAf,CAAuBC,EAAvB,EAAmC;EACtC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEH,WAAY,IAAGS,EAAG,EAA/B,CAAvB;IACAL,OAAO,CAACC,GAAR,CAAa,2BAA0BI,EAAG,GAA1C,EAA8CP,QAAQ,CAACI,IAAvD;IACA,OAAOJ,QAAQ,CAACI,IAAhB;EACH,CAJD,CAIE,OAAOC,KAAP,EAAc;IACZH,OAAO,CAACG,KAAR,CAAe,kCAAiCE,EAAG,GAAnD,EAAuDF,KAAvD;IACA,MAAMA,KAAN;EACH;AACJ;AAED,OAAO,eAAeG,aAAf,CAA6BC,OAA7B,EAAkD;EACrD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACiB,IAAN,CAAY,GAAEZ,WAAY,EAA1B,EAA6BW,OAA7B,CAAvB;IACAP,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,QAAQ,CAACI,IAAzC;IACA,OAAOJ,QAAQ,CAACI,IAAhB;EACH,CAJD,CAIE,OAAOC,KAAP,EAAc;IACZH,OAAO,CAACG,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;IACA,MAAMA,KAAN;EACH;AACJ;AAED,OAAO,eAAeM,aAAf,CAA6BF,OAA7B,EAAkD;EACrD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACmB,GAAN,CAAW,GAAEd,WAAY,IAAGW,OAAO,CAACI,SAAU,EAA9C,EAAiDJ,OAAjD,CAAvB;IACAP,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,QAAQ,CAACI,IAAzC;IACA,OAAOJ,QAAQ,CAACI,IAAhB;EACH,CAJD,CAIE,OAAOC,KAAP,EAAc;IACZH,OAAO,CAACG,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;IACA,MAAMA,KAAN;EACH;AACJ;AAED,OAAO,eAAeS,aAAf,CAA6BP,EAA7B,EAAyC;EAC5C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACsB,MAAN,CAAc,GAAEjB,WAAY,IAAGS,EAAG,EAAlC,CAAvB;IACAL,OAAO,CAACC,GAAR,CAAa,2BAA0BI,EAAG,GAA1C,EAA8CP,QAAQ,CAACI,IAAvD;IACA,OAAOJ,QAAQ,CAACI,IAAhB;EACH,CAJD,CAIE,OAAOC,KAAP,EAAc;IACZH,OAAO,CAACG,KAAR,CAAe,kCAAiCE,EAAG,GAAnD,EAAuDF,KAAvD;IACA,MAAMA,KAAN;EACH;AACJ"},"metadata":{},"sourceType":"module"}