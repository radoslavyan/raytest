{"ast":null,"code":"const BASE_URL = process.env.REACT_APP_API_URL;\nexport async function getAll() {\n  try {\n    const response = await fetch(`${BASE_URL}/projects`);\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to fetch projects:\", error);\n    throw error; // Rethrowing the error to be handled by the caller\n  }\n}\nexport async function getById(id) {\n  try {\n    const response = await fetch(`${BASE_URL}/projects/${id}`);\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to fetch project with ID ${id}:`, error);\n    throw error;\n  }\n}\nexport async function createProject(project) {\n  try {\n    const response = await fetch(`${BASE_URL}/projects`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to create project:\", error);\n    throw error;\n  }\n}\nexport async function updateProject(project) {\n  try {\n    const response = await fetch(`${BASE_URL}/projects/${project.projectId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to update project:\", error);\n    throw error;\n  }\n}\nexport async function removeProject(id) {\n  try {\n    const response = await fetch(`${BASE_URL}/projects/${id}`, {\n      method: 'DELETE'\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to delete project:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_URL","getAll","response","fetch","ok","Error","status","json","error","console","getById","id","createProject","project","method","headers","body","JSON","stringify","updateProject","projectId","removeProject"],"sources":["C:/Users/rados/OneDrive/Skrivebord/rep/TimeLogger/client/src/app/apiEndpoints/ProjectEndpoints.ts"],"sourcesContent":["const BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\ninterface Project {\r\n    projectId: number;\r\n    name: string;\r\n    deadline: string; // Or Date, depending on how you manage dates\r\n}\r\n\r\nexport async function getAll() {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/projects`);\r\n        if (!response.ok) {\r\n            throw new Error(`Error: ${response.status}`);\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Failed to fetch projects:\", error);\r\n        throw error; // Rethrowing the error to be handled by the caller\r\n    }\r\n}\r\n\r\nexport async function getById(id: number) {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/projects/${id}`);\r\n        if (!response.ok) {\r\n            throw new Error(`Error: ${response.status}`);\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(`Failed to fetch project with ID ${id}:`, error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function createProject(project: Project) {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/projects`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(project)\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Error: ${response.status}`);\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Failed to create project:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function updateProject(project: Project) {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/projects/${project.projectId}`, {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(project)\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Error: ${response.status}`);\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Failed to update project:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function removeProject(id: number) {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/projects/${id}`, {\r\n            method: 'DELETE',\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Error: ${response.status}`);\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Failed to delete project:\", error);\r\n        throw error;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}